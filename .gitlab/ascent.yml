##### Ascent Templates #####

# The WORKING_DIR envar is defined to allow the init job to clone the
# git repo to a different location than the default. Subsequent jobs
# will then `cd` to this directory during their before_script stage.
# The WORKING_DIR_BASE envar is definied in the Gitlab UI.
#
# The RUN_ASCENT variable can be toggled in the Gitlab interface to
# toggle whether jobs should be run on this system.
.ascent-template:
  variables:
    WORKING_DIR: ${WORKING_DIR_BASE}/${CI_PIPELINE_ID}
  extends: .base-template
  rules:
    - if: '$RUN_ASCENT != "ON"'
      when: never
    - when: on_success

.ascent-shell-template:
  extends: .ascent-template
  tags: [nobatch]

.ascent-batch-template:
  extends: .ascent-template
  tags: [batch]

##### All Ascent Jobs #####

ascent-gcc-4_8_5-init:
  extends: [.ascent-shell-template, .init-template]

ascent-gcc-4_8_5-build:
  variables:
    COMPILER: gcc/4.8.5
    CC_COMMAND: "which gcc"
    FC_COMMAND: "which gfortran"
  extends: [.ascent-shell-template, .build-template]
  needs: ["ascent-gcc-4_8_5-init"]

ascent-gcc-4_8_5-unit-test:
  variables:
    COMPILER: gcc/4.8.5
    CC_COMMAND: "which gcc"
    FC_COMMAND: "which gfortran"
  extends: [.lsf-single-node-template, .ascent-batch-template, .unit-test-template]
  needs: ["ascent-gcc-4_8_5-build"]

ascent-gcc-4_8_5-integ-test:
  variables:
    COMPILER: gcc/4.8.5
    CC_COMMAND: "which gcc"
    FC_COMMAND: "which gfortran"
  extends: [.lsf-multi-node-template, .ascent-batch-template, .integ-test-template]
  needs: ["ascent-gcc-4_8_5-build"]
